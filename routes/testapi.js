const express = require('express');
const router = express.Router();
const { google } = require('googleapis');

router.post('/testapi', async (req, res, next) => {

    // console.log(req.body);
    const NodeGeocoder = require('node-geocoder');
    const options = {
        provider: 'google',
        apiKey: 'AIzaSyCPBsuYfjXEmmlUOd6mGz5fZfPXF90aB3M', // key test
        formatter: null
    };
    const geocoder = NodeGeocoder(options);
    const result = await geocoder.geocode(
        req.body.data
    ).then((result) => {
        return result;
    }).catch((err) => {
        return err
    });
    res.send(result)
});

router.post('/testapigame24', async (req, res, next) => {

    // console.log(req.body.data);
    var number = Math.floor(1000 + Math.random() * 9000).toString(); // random
    console.log(number);
    console.log(number[0]);
    console.log(number[1]);
    console.log(number[2]);
    console.log(number[3]);
    var n0 = number[0];
    var n1 = number[1];
    var n2 = number[2];
    var n3 = number[3];
    /* test number */
    // var n0 = 8;
    // var n1 = 4;
    // var n2 = 2;
    // var n3 = 3;
    if (n0 == 0 || n1 == 0 || n2 == 0 || n3 == 0) {
        var message_error = "ห้ามมีเลข 0"
        res.send(message_error)
    }
    let total = 0
    let text = "No"
    var method_a = [
        "((a+b)+c)+d",
        "((a+b)+c)-d",
        "((a+b)+c)*d",
        "((a+b)+c)/d",
        "((a+b)-c)+d",
        "((a+b)-c)-d",
        "((a+b)-c)*d",
        "((a+b)-c)/d",
        "((a+b)*c)+d",
        "((a+b)*c)-d",
        "((a+b)*c)*d",
        "((a+b)*c)/d",
        "((a+b)/c)+d",
        "((a+b)/c)-d",
        "((a+b)/c)*d",
        "(a+b)/(c*d)",
        "((a-b)+c)+d",
        "((a-b)+c)-d",
        "((a-b)+c)*d",
        "((a-b)+c)/d",
        "((a-b)-c)+d",
        "((a-b)-c)-d",
        "((a-b)-c)*d",
        "((a-b)-c)/d",
        "((a-b)*c)+d",
        "((a-b)*c)-d",
        "((a-b)*c)*d",
        "((a-b)*c)/d",
        "((a-b)/c)+d",
        "((a-b)/c)-d",
        "((a-b)/c)*d",
        "(a-b)/(c*d)",
        "((a*b)+c)+d",
        "((a*b)+c)-d",
        "((a*b)+c)*d",
        "((a*b)+c)/d",
        "((a*b)-c)+d",
        "((a*b)-c)-d",
        "((a*b)-c)*d",
        "((a*b)-c)/d",
        "((a*b)*c)+d",
        "((a*b)*c)-d",
        "((a*b)*c)*d",
        "((a*b)*c)/d",
        "((a*b)/c)+d",
        "((a*b)/c)-d",
        "((a*b)/c)*d",
        "(a/(c*d))*b",
        "((a/b)+c)+d",
        "((a/b)+c)-d",
        "((a/b)+c)*d",
        "((a/b)+c)/d",
        "((a/b)-c)+d",
        "((a/b)-c)-d",
        "((a/b)-c)*d",
        "((a/b)-c)/d",
        "((a/b)*c)+d",
        "((a/b)*c)-d",
        "((a/b)*c)*d",
        "(a/(b*d))*c",
        "(a/(b*c))+d",
        "(a/(b*c))-d",
        "(a/(b*c))*d",
        "a/((b*c)*d)",
        "((a+b)+d)*c",
        "((a+b)+d)/c",
        "((a+b)-d)*c",
        "((a+b)-d)/c",
        "((a+b)*d)+c",
        "((a+b)*d)-c",
        "((a+b)/d)+c",
        "((a+b)/d)-c",
        "((a-b)+d)*c",
        "((a-b)+d)/c",
        "((a-b)-d)*c",
        "((a-b)-d)/c",
        "((a-b)*d)+c",
        "((a-b)*d)-c",
        "((a-b)/d)+c",
        "((a-b)/d)-c",
        "((a*b)+d)*c",
        "((a*b)+d)/c",
        "((a*b)-d)*c",
        "((a*b)-d)/c",
        "((a*b)*d)+c",
        "((a*b)*d)-c",
        "((a*b)/d)+c",
        "((a*b)/d)-c",
        "((a/b)+d)*c",
        "((a/b)+d)/c",
        "((a/b)-d)*c",
        "((a/b)-d)/c",
        "((a/b)*d)+c",
        "((a/b)*d)-c",
        "(a/(b*d))+c",
        "(a/(b*d))-c",
        "((a+c)*b)+d",
        "((a+c)*b)-d",
        "((a+c)*b)*d",
        "((a+c)*b)/d",
        "((a+c)/b)+d",
        "((a+c)/b)-d",
        "((a+c)/b)*d",
        "(a+c)/(b*d)",
        "((a-c)*b)+d",
        "((a-c)*b)-d",
        "((a-c)*b)*d",
        "((a-c)*b)/d",
        "((a-c)/b)+d",
        "((a-c)/b)-d",
        "((a-c)/b)*d",
        "(a-c)/(b*d)",
        "((a*c)+b)+d",
        "((a*c)+b)-d",
        "((a*c)+b)*d",
        "((a*c)+b)/d",
        "((a*c)-b)+d",
        "((a*c)-b)-d",
        "((a*c)-b)*d",
        "((a*c)-b)/d",
        "((a/c)+b)+d",
        "((a/c)+b)-d",
        "((a/c)+b)*d",
        "((a/c)+b)/d",
        "((a/c)-b)+d",
        "((a/c)-b)-d",
        "((a/c)-b)*d",
        "((a/c)-b)/d",
        "((a+c)+d)*b",
        "((a+c)+d)/b",
        "((a+c)-d)*b",
        "((a+c)-d)/b",
        "((a+c)*d)+b",
        "((a+c)*d)-b",
        "((a+c)/d)+b",
        "((a+c)/d)-b",
        "((a-c)+d)*b",
        "((a-c)+d)/b",
        "((a-c)-d)*b",
        "((a-c)-d)/b",
        "((a-c)*d)+b",
        "((a-c)*d)-b",
        "((a-c)/d)+b",
        "((a-c)/d)-b",
        "((a*c)+d)*b",
        "((a*c)+d)/b",
        "((a*c)-d)*b",
        "((a*c)-d)/b",
        "((a*c)*d)+b",
        "((a*c)*d)-b",
        "((a*c)/d)+b",
        "((a*c)/d)-b",
        "((a/c)+d)*b",
        "((a/c)+d)/b",
        "((a/c)-d)*b",
        "((a/c)-d)/b",
        "((a/c)*d)+b",
        "((a/c)*d)-b",
        "(a/(c*d))+b",
        "(a/(c*d))-b",
        "((a+d)*b)+c",
        "((a+d)*b)-c",
        "((a+d)*b)*c",
        "((a+d)*b)/c",
        "((a+d)/b)+c",
        "((a+d)/b)-c",
        "((a+d)/b)*c",
        "(a+d)/(b*c)",
        "((a-d)*b)+c",
        "((a-d)*b)-c",
        "((a-d)*b)*c",
        "((a-d)*b)/c",
        "((a-d)/b)+c",
        "((a-d)/b)-c",
        "((a-d)/b)*c",
        "(a-d)/(b*c)",
        "((a*d)+b)+c",
        "((a*d)+b)-c",
        "((a*d)+b)*c",
        "((a*d)+b)/c",
        "((a*d)-b)+c",
        "((a*d)-b)-c",
        "((a*d)-b)*c",
        "((a*d)-b)/c",
        "((a/d)+b)+c",
        "((a/d)+b)-c",
        "((a/d)+b)*c",
        "((a/d)+b)/c",
        "((a/d)-b)+c",
        "((a/d)-b)-c",
        "((a/d)-b)*c",
        "((a/d)-b)/c",
        "((a+d)*c)+b",
        "((a+d)*c)-b",
        "((a+d)/c)+b",
        "((a+d)/c)-b",
        "((a-d)*c)+b",
        "((a-d)*c)-b",
        "((a-d)/c)+b",
        "((a-d)/c)-b",
        "((a*d)+c)*b",
        "((a*d)+c)/b",
        "((a*d)-c)*b",
        "((a*d)-c)/b",
        "((a/d)+c)*b",
        "((a/d)+c)/b",
        "((a/d)-c)*b",
        "((a/d)-c)/b",
        "((b-a)+c)+d",
        "((b-a)+c)-d",
        "((b-a)+c)*d",
        "((b-a)+c)/d",
        "((b-a)-c)+d",
        "((b-a)-c)-d",
        "((b-a)-c)*d",
        "((b-a)-c)/d",
        "((b-a)*c)+d",
        "((b-a)*c)-d",
        "((b-a)*c)*d",
        "((b-a)*c)/d",
        "((b-a)/c)+d",
        "((b-a)/c)-d",
        "((b-a)/c)*d",
        "(b-a)/(c*d)",
        "((b/a)+c)+d",
        "((b/a)+c)-d",
        "((b/a)+c)*d",
        "((b/a)+c)/d",
        "((b/a)-c)+d",
        "((b/a)-c)-d",
        "((b/a)-c)*d",
        "((b/a)-c)/d",
        "((b/a)*c)+d",
        "((b/a)*c)-d",
        "((b/a)*c)*d",
        "(b/(a*d))*c",
        "(b/(a*c))+d",
        "(b/(a*c))-d",
        "(b/(a*c))*d",
        "b/((a*c)*d)",
        "((b-a)+d)*c",
        "((b-a)+d)/c",
        "((b-a)-d)*c",
        "((b-a)-d)/c",
        "((b-a)*d)+c",
        "((b-a)*d)-c",
        "((b-a)/d)+c",
        "((b-a)/d)-c",
        "((b/a)+d)*c",
        "((b/a)+d)/c",
        "((b/a)-d)*c",
        "((b/a)-d)/c",
        "((b/a)*d)+c",
        "((b/a)*d)-c",
        "(b/(a*d))+c",
        "(b/(a*d))-c",
        "((b+c)*a)+d",
        "((b+c)*a)-d",
        "((b+c)*a)*d",
        "((b+c)*a)/d",
        "((b+c)/a)+d",
        "((b+c)/a)-d",
        "((b+c)/a)*d",
        "(b+c)/(a*d)",
        "((b-c)*a)+d",
        "((b-c)*a)-d",
        "((b-c)*a)*d",
        "((b-c)*a)/d",
        "((b-c)/a)+d",
        "((b-c)/a)-d",
        "((b-c)/a)*d",
        "(b-c)/(a*d)",
        "((b*c)+a)+d",
        "((b*c)+a)-d",
        "((b*c)+a)*d",
        "((b*c)+a)/d",
        "((b*c)-a)+d",
        "((b*c)-a)-d",
        "((b*c)-a)*d",
        "((b*c)-a)/d",
        "((b/c)+a)+d",
        "((b/c)+a)-d",
        "((b/c)+a)*d",
        "((b/c)+a)/d",
        "((b/c)-a)+d",
        "((b/c)-a)-d",
        "((b/c)-a)*d",
        "((b/c)-a)/d",
        "((b+c)+d)*a",
        "((b+c)+d)/a",
        "((b+c)-d)*a",
        "((b+c)-d)/a",
        "((b+c)*d)+a",
        "((b+c)*d)-a",
        "((b+c)/d)+a",
        "((b+c)/d)-a",
        "((b-c)+d)*a",
        "((b-c)+d)/a",
        "((b-c)-d)*a",
        "((b-c)-d)/a",
        "((b-c)*d)+a",
        "((b-c)*d)-a",
        "((b-c)/d)+a",
        "((b-c)/d)-a",
        "((b*c)+d)*a",
        "((b*c)+d)/a",
        "((b*c)-d)*a",
        "((b*c)-d)/a",
        "((b*c)*d)+a",
        "((b*c)*d)-a",
        "((b*c)/d)+a",
        "((b*c)/d)-a",
        "((b/c)+d)*a",
        "((b/c)+d)/a",
        "((b/c)-d)*a",
        "((b/c)-d)/a",
        "((b/c)*d)+a",
        "((b/c)*d)-a",
        "(b/(c*d))+a",
        "(b/(c*d))-a",
        "((b+d)*a)+c",
        "((b+d)*a)-c",
        "((b+d)*a)*c",
        "((b+d)*a)/c",
        "((b+d)/a)+c",
        "((b+d)/a)-c",
        "((b+d)/a)*c",
        "(b+d)/(a*c)",
        "((b-d)*a)+c",
        "((b-d)*a)-c",
        "((b-d)*a)*c",
        "((b-d)*a)/c",
        "((b-d)/a)+c",
        "((b-d)/a)-c",
        "((b-d)/a)*c",
        "(b-d)/(a*c)",
        "((b*d)+a)+c",
        "((b*d)+a)-c",
        "((b*d)+a)*c",
        "((b*d)+a)/c",
        "((b*d)-a)+c",
        "((b*d)-a)-c",
        "((b*d)-a)*c",
        "((b*d)-a)/c",
        "((b/d)+a)+c",
        "((b/d)+a)-c",
        "((b/d)+a)*c",
        "((b/d)+a)/c",
        "((b/d)-a)+c",
        "((b/d)-a)-c",
        "((b/d)-a)*c",
        "((b/d)-a)/c",
        "((b+d)*c)+a",
        "((b+d)*c)-a",
        "((b+d)/c)+a",
        "((b+d)/c)-a",
        "((b-d)*c)+a",
        "((b-d)*c)-a",
        "((b-d)/c)+a",
        "((b-d)/c)-a",
        "((b*d)+c)*a",
        "((b*d)+c)/a",
        "((b*d)-c)*a",
        "((b*d)-c)/a",
        "((b/d)+c)*a",
        "((b/d)+c)/a",
        "((b/d)-c)*a",
        "((b/d)-c)/a",
        "((c-a)-b)+d",
        "((c-a)-b)-d",
        "((c-a)-b)*d",
        "((c-a)-b)/d",
        "((c-a)*b)+d",
        "((c-a)*b)-d",
        "((c-a)*b)*d",
        "((c-a)*b)/d",
        "((c-a)/b)+d",
        "((c-a)/b)-d",
        "((c-a)/b)*d",
        "(c-a)/(b*d)",
        "((c/a)+b)+d",
        "((c/a)+b)-d",
        "((c/a)+b)*d",
        "((c/a)+b)/d",
        "((c/a)-b)+d",
        "((c/a)-b)-d",
        "((c/a)-b)*d",
        "((c/a)-b)/d",
        "(c/(a*b))+d",
        "(c/(a*b))-d",
        "(c/(a*b))*d",
        "c/((a*b)*d)",
        "((c-a)+d)*b",
        "((c-a)+d)/b",
        "((c-a)-d)*b",
        "((c-a)-d)/b",
        "((c-a)*d)+b",
        "((c-a)*d)-b",
        "((c-a)/d)+b",
        "((c-a)/d)-b",
        "((c/a)+d)*b",
        "((c/a)+d)/b",
        "((c/a)-d)*b",
        "((c/a)-d)/b",
        "((c/a)*d)+b",
        "((c/a)*d)-b",
        "(c/(a*d))+b",
        "(c/(a*d))-b",
        "((c-b)*a)+d",
        "((c-b)*a)-d",
        "((c-b)*a)*d",
        "((c-b)*a)/d",
        "((c-b)/a)+d",
        "((c-b)/a)-d",
        "((c-b)/a)*d",
        "(c-b)/(a*d)",
        "((c/b)+a)+d",
        "((c/b)+a)-d",
        "((c/b)+a)*d",
        "((c/b)+a)/d",
        "((c/b)-a)+d",
        "((c/b)-a)-d",
        "((c/b)-a)*d",
        "((c/b)-a)/d",
        "((c-b)+d)*a",
        "((c-b)+d)/a",
        "((c-b)-d)*a",
        "((c-b)-d)/a",
        "((c-b)*d)+a",
        "((c-b)*d)-a",
        "((c-b)/d)+a",
        "((c-b)/d)-a",
        "((c/b)+d)*a",
        "((c/b)+d)/a",
        "((c/b)-d)*a",
        "((c/b)-d)/a",
        "((c/b)*d)+a",
        "((c/b)*d)-a",
        "(c/(b*d))+a",
        "(c/(b*d))-a",
        "((c+d)*a)+b",
        "((c+d)*a)-b",
        "((c+d)*a)*b",
        "((c+d)*a)/b",
        "((c+d)/a)+b",
        "((c+d)/a)-b",
        "((c+d)/a)*b",
        "(c+d)/(a*b)",
        "((c-d)*a)+b",
        "((c-d)*a)-b",
        "((c-d)*a)*b",
        "((c-d)*a)/b",
        "((c-d)/a)+b",
        "((c-d)/a)-b",
        "((c-d)/a)*b",
        "(c-d)/(a*b)",
        "((c*d)+a)+b",
        "((c*d)+a)-b",
        "((c*d)+a)*b",
        "((c*d)+a)/b",
        "((c*d)-a)+b",
        "((c*d)-a)-b",
        "((c*d)-a)*b",
        "((c*d)-a)/b",
        "((c/d)+a)+b",
        "((c/d)+a)-b",
        "((c/d)+a)*b",
        "((c/d)+a)/b",
        "((c/d)-a)+b",
        "((c/d)-a)-b",
        "((c/d)-a)*b",
        "((c/d)-a)/b",
        "((c+d)*b)+a",
        "((c+d)*b)-a",
        "((c+d)/b)+a",
        "((c+d)/b)-a",
        "((c-d)*b)+a",
        "((c-d)*b)-a",
        "((c-d)/b)+a",
        "((c-d)/b)-a",
        "((c*d)+b)*a",
        "((c*d)+b)/a",
        "((c*d)-b)*a",
        "((c*d)-b)/a",
        "((c/d)+b)*a",
        "((c/d)+b)/a",
        "((c/d)-b)*a",
        "((c/d)-b)/a",
        "((d-a)-b)-c",
        "((d-a)-b)*c",
        "((d-a)-b)/c",
        "((d-a)*b)+c",
        "((d-a)*b)-c",
        "((d-a)*b)*c",
        "((d-a)*b)/c",
        "((d-a)/b)+c",
        "((d-a)/b)-c",
        "((d-a)/b)*c",
        "(d-a)/(b*c)",
        "((d/a)+b)+c",
        "((d/a)+b)-c",
        "((d/a)+b)*c",
        "((d/a)+b)/c",
        "((d/a)-b)+c",
        "((d/a)-b)-c",
        "((d/a)-b)*c",
        "((d/a)-b)/c",
        "(d/(a*b))+c",
        "(d/(a*b))-c",
        "d/((a*b)*c)",
        "((d-a)-c)*b",
        "((d-a)-c)/b",
        "((d-a)*c)+b",
        "((d-a)*c)-b",
        "((d-a)/c)+b",
        "((d-a)/c)-b",
        "((d/a)+c)*b",
        "((d/a)+c)/b",
        "((d/a)-c)*b",
        "((d/a)-c)/b",
        "(d/(a*c))+b",
        "(d/(a*c))-b",
        "((d-b)*a)+c",
        "((d-b)*a)-c",
        "((d-b)*a)*c",
        "((d-b)*a)/c",
        "((d-b)/a)+c",
        "((d-b)/a)-c",
        "((d-b)/a)*c",
        "(d-b)/(a*c)",
        "((d/b)+a)+c",
        "((d/b)+a)-c",
        "((d/b)+a)*c",
        "((d/b)+a)/c",
        "((d/b)-a)+c",
        "((d/b)-a)-c",
        "((d/b)-a)*c",
        "((d/b)-a)/c",
        "((d-b)-c)*a",
        "((d-b)-c)/a",
        "((d-b)*c)+a",
        "((d-b)*c)-a",
        "((d-b)/c)+a",
        "((d-b)/c)-a",
        "((d/b)+c)*a",
        "((d/b)+c)/a",
        "((d/b)-c)*a",
        "((d/b)-c)/a",
        "(d/(b*c))+a",
        "(d/(b*c))-a",
        "((d-c)*a)+b",
        "((d-c)*a)-b",
        "((d-c)*a)*b",
        "((d-c)*a)/b",
        "((d-c)/a)+b",
        "((d-c)/a)-b",
        "((d-c)/a)*b",
        "(d-c)/(a*b)",
        "((d/c)+a)+b",
        "((d/c)+a)-b",
        "((d/c)+a)*b",
        "((d/c)+a)/b",
        "((d/c)-a)+b",
        "((d/c)-a)-b",
        "((d/c)-a)*b",
        "((d/c)-a)/b",
        "((d-c)*b)+a",
        "((d-c)*b)-a",
        "((d-c)/b)+a",
        "((d-c)/b)-a",
        "((d/c)+b)*a",
        "((d/c)+b)/a",
        "((d/c)-b)*a",
        "((d/c)-b)/a",
        "(a-(b*c))+d",
        "(a-(b*c))-d",
        "(a-(b*c))*d",
        "(a-(b*c))/d",
        "(a-(b/c))+d",
        "(a-(b/c))-d",
        "(a-(b/c))*d",
        "(a-(b/c))/d",
        "(a/(b+c))+d",
        "(a/(b+c))-d",
        "(a/(b+c))*d",
        "a/((b+c)*d)",
        "(a/(b-c))+d",
        "(a/(b-c))-d",
        "(a/(b-c))*d",
        "a/((b-c)*d)",
        "(a-(b*d))+c",
        "(a-(b*d))-c",
        "(a-(b*d))*c",
        "(a-(b*d))/c",
        "(a-(b/d))+c",
        "(a-(b/d))-c",
        "(a-(b/d))*c",
        "(a-(b/d))/c",
        "(a/(b+d))+c",
        "(a/(b+d))-c",
        "(a/(b+d))*c",
        "a/((b+d)*c)",
        "(a/(b-d))+c",
        "(a/(b-d))-c",
        "(a/(b-d))*c",
        "a/((b-d)*c)",
        "(a-(c/b))+d",
        "(a-(c/b))-d",
        "(a-(c/b))*d",
        "(a-(c/b))/d",
        "(a/(c-b))+d",
        "(a/(c-b))-d",
        "(a/(c-b))*d",
        "a/((c-b)*d)",
        "(a-(c*d))+b",
        "(a-(c*d))-b",
        "(a-(c*d))*b",
        "(a-(c*d))/b",
        "(a-(c/d))+b",
        "(a-(c/d))-b",
        "(a-(c/d))*b",
        "(a-(c/d))/b",
        "(a/(c+d))+b",
        "(a/(c+d))-b",
        "(a/(c+d))*b",
        "a/((c+d)*b)",
        "(a/(c-d))+b",
        "(a/(c-d))-b",
        "(a/(c-d))*b",
        "a/((c-d)*b)",
        "(a-(d/b))+c",
        "(a-(d/b))-c",
        "(a-(d/b))*c",
        "(a-(d/b))/c",
        "(a/(d-b))+c",
        "(a/(d-b))-c",
        "(a/(d-b))*c",
        "a/((d-b)*c)",
        "(a-(d/c))+b",
        "(a-(d/c))-b",
        "(a-(d/c))*b",
        "(a-(d/c))/b",
        "(a/(d-c))+b",
        "(a/(d-c))-b",
        "(a/(d-c))*b",
        "a/((d-c)*b)",
        "(b-(a*c))+d",
        "(b-(a*c))-d",
        "(b-(a*c))*d",
        "(b-(a*c))/d",
        "(b-(a/c))+d",
        "(b-(a/c))-d",
        "(b-(a/c))*d",
        "(b-(a/c))/d",
        "(b/(a+c))+d",
        "(b/(a+c))-d",
        "(b/(a+c))*d",
        "b/((a+c)*d)",
        "(b/(a-c))+d",
        "(b/(a-c))-d",
        "(b/(a-c))*d",
        "b/((a-c)*d)",
        "(b-(a*d))+c",
        "(b-(a*d))-c",
        "(b-(a*d))*c",
        "(b-(a*d))/c",
        "(b-(a/d))+c",
        "(b-(a/d))-c",
        "(b-(a/d))*c",
        "(b-(a/d))/c",
        "(b/(a+d))+c",
        "(b/(a+d))-c",
        "(b/(a+d))*c",
        "b/((a+d)*c)",
        "(b/(a-d))+c",
        "(b/(a-d))-c",
        "(b/(a-d))*c",
        "b/((a-d)*c)",
        "(b-(c/a))+d",
        "(b-(c/a))-d",
        "(b-(c/a))*d",
        "(b-(c/a))/d",
        "(b/(c-a))+d",
        "(b/(c-a))-d",
        "(b/(c-a))*d",
        "b/((c-a)*d)",
        "(b-(c*d))-a",
        "(b-(c*d))*a",
        "(b-(c*d))/a",
        "(b-(c/d))-a",
        "(b-(c/d))*a",
        "(b-(c/d))/a",
        "(b/(c+d))+a",
        "(b/(c+d))-a",
        "b/((c+d)*a)",
        "(b/(c-d))+a",
        "(b/(c-d))-a",
        "b/((c-d)*a)",
        "(b-(d/a))+c",
        "(b-(d/a))-c",
        "(b-(d/a))*c",
        "(b-(d/a))/c",
        "(b/(d-a))+c",
        "(b/(d-a))-c",
        "(b/(d-a))*c",
        "b/((d-a)*c)",
        "(b-(d/c))-a",
        "(b-(d/c))*a",
        "(b-(d/c))/a",
        "(b/(d-c))+a",
        "(b/(d-c))-a",
        "b/((d-c)*a)",
        "(c-(a*b))+d",
        "(c-(a*b))-d",
        "(c-(a*b))*d",
        "(c-(a*b))/d",
        "(c-(a/b))+d",
        "(c-(a/b))-d",
        "(c-(a/b))*d",
        "(c-(a/b))/d",
        "(c/(a+b))+d",
        "(c/(a+b))-d",
        "(c/(a+b))*d",
        "c/((a+b)*d)",
        "(c/(a-b))+d",
        "(c/(a-b))-d",
        "(c/(a-b))*d",
        "c/((a-b)*d)",
        "(c-(a*d))-b",
        "(c-(a*d))*b",
        "(c-(a*d))/b",
        "(c-(a/d))-b",
        "(c-(a/d))*b",
        "(c-(a/d))/b",
        "(c/(a+d))+b",
        "(c/(a+d))-b",
        "c/((a+d)*b)",
        "(c/(a-d))+b",
        "(c/(a-d))-b",
        "c/((a-d)*b)",
        "(c-(b/a))+d",
        "(c-(b/a))-d",
        "(c-(b/a))*d",
        "(c-(b/a))/d",
        "(c/(b-a))+d",
        "(c/(b-a))-d",
        "(c/(b-a))*d",
        "c/((b-a)*d)",
        "(c-(b*d))-a",
        "(c-(b*d))*a",
        "(c-(b*d))/a",
        "(c-(b/d))-a",
        "(c-(b/d))*a",
        "(c-(b/d))/a",
        "(c/(b+d))+a",
        "(c/(b+d))-a",
        "c/((b+d)*a)",
        "(c/(b-d))+a",
        "(c/(b-d))-a",
        "c/((b-d)*a)",
        "(c-(d/a))-b",
        "(c-(d/a))*b",
        "(c-(d/a))/b",
        "(c/(d-a))+b",
        "(c/(d-a))-b",
        "c/((d-a)*b)",
        "(c-(d/b))-a",
        "(c-(d/b))*a",
        "(c-(d/b))/a",
        "(c/(d-b))+a",
        "(c/(d-b))-a",
        "c/((d-b)*a)",
        "(d-(a*b))-c",
        "(d-(a*b))*c",
        "(d-(a*b))/c",
        "(d-(a/b))-c",
        "(d-(a/b))*c",
        "(d-(a/b))/c",
        "(d/(a+b))+c",
        "(d/(a+b))-c",
        "d/((a+b)*c)",
        "(d/(a-b))+c",
        "(d/(a-b))-c",
        "d/((a-b)*c)",
        "(d-(a*c))-b",
        "(d-(a*c))*b",
        "(d-(a*c))/b",
        "(d-(a/c))-b",
        "(d-(a/c))*b",
        "(d-(a/c))/b",
        "(d/(a+c))+b",
        "(d/(a+c))-b",
        "d/((a+c)*b)",
        "(d/(a-c))+b",
        "(d/(a-c))-b",
        "d/((a-c)*b)",
        "(d-(b/a))-c",
        "(d-(b/a))*c",
        "(d-(b/a))/c",
        "(d/(b-a))+c",
        "(d/(b-a))-c",
        "d/((b-a)*c)",
        "(d-(b*c))-a",
        "(d-(b*c))*a",
        "(d-(b*c))/a",
        "(d-(b/c))-a",
        "(d-(b/c))*a",
        "(d-(b/c))/a",
        "(d/(b+c))+a",
        "(d/(b+c))-a",
        "d/((b+c)*a)",
        "(d/(b-c))+a",
        "(d/(b-c))-a",
        "d/((b-c)*a)",
        "(d-(c/a))-b",
        "(d-(c/a))*b",
        "(d-(c/a))/b",
        "(d/(c-a))+b",
        "(d/(c-a))-b",
        "d/((c-a)*b)",
        "(d-(c/b))-a",
        "(d-(c/b))*a",
        "(d-(c/b))/a",
        "(d/(c-b))+a",
        "(d/(c-b))-a",
        "d/((c-b)*a)",
        "(a+b)*(c+d)",
        "(a+b)*(c-d)",
        "(a+b)/(c+d)",
        "(a+b)/(c-d)",
        "(a-b)*(c+d)",
        "(a-b)*(c-d)",
        "(a-b)/(c+d)",
        "(a-b)/(c-d)",
        "(a*b)+(c*d)",
        "(a*b)+(c/d)",
        "(a*b)-(c*d)",
        "(a*b)-(c/d)",
        "(a/b)+(c*d)",
        "(a/b)+(c/d)",
        "(a/b)-(c*d)",
        "(a/b)-(c/d)",
        "(a+b)*(d-c)",
        "(a+b)/(d-c)",
        "(a-b)*(d-c)",
        "(a-b)/(d-c)",
        "(a*b)+(d/c)",
        "(a*b)-(d/c)",
        "(a/b)+(d/c)",
        "(a/b)-(d/c)",
        "(a+c)*(b+d)",
        "(a+c)*(b-d)",
        "(a+c)/(b+d)",
        "(a+c)/(b-d)",
        "(a-c)*(b+d)",
        "(a-c)*(b-d)",
        "(a-c)/(b+d)",
        "(a-c)/(b-d)",
        "(a*c)+(b*d)",
        "(a*c)+(b/d)",
        "(a*c)-(b*d)",
        "(a*c)-(b/d)",
        "(a/c)+(b*d)",
        "(a/c)+(b/d)",
        "(a/c)-(b*d)",
        "(a/c)-(b/d)",
        "(a+c)*(d-b)",
        "(a+c)/(d-b)",
        "(a-c)*(d-b)",
        "(a-c)/(d-b)",
        "(a*c)+(d/b)",
        "(a*c)-(d/b)",
        "(a/c)+(d/b)",
        "(a/c)-(d/b)",
        "(a+d)*(b+c)",
        "(a+d)*(b-c)",
        "(a+d)/(b+c)",
        "(a+d)/(b-c)",
        "(a-d)*(b+c)",
        "(a-d)*(b-c)",
        "(a-d)/(b+c)",
        "(a-d)/(b-c)",
        "(a*d)+(b*c)",
        "(a*d)+(b/c)",
        "(a*d)-(b*c)",
        "(a*d)-(b/c)",
        "(a/d)+(b*c)",
        "(a/d)+(b/c)",
        "(a/d)-(b*c)",
        "(a/d)-(b/c)",
        "(a+d)*(c-b)",
        "(a+d)/(c-b)",
        "(a-d)*(c-b)",
        "(a-d)/(c-b)",
        "(a*d)+(c/b)",
        "(a*d)-(c/b)",
        "(a/d)+(c/b)",
        "(a/d)-(c/b)",
        "(b-a)*(c+d)",
        "(b-a)/(c+d)",
        "(b/a)+(c*d)",
        "(b/a)+(c/d)",
        "(b/a)-(c*d)",
        "(b/a)-(c/d)",
        "(b/a)+(d/c)",
        "(b/a)-(d/c)",
        "(b+c)/(a+d)",
        "(b+c)/(a-d)",
        "(b-c)/(a+d)",
        "(b-c)/(a-d)",
        "(b*c)-(a*d)",
        "(b*c)-(a/d)",
        "(b/c)-(a*d)",
        "(b/c)-(a/d)",
        "(b+c)*(d-a)",
        "(b+c)/(d-a)",
        "(b-c)/(d-a)",
        "(b*c)+(d/a)",
        "(b*c)-(d/a)",
        "(b/c)+(d/a)",
        "(b/c)-(d/a)",
        "(b+d)/(a+c)",
        "(b+d)/(a-c)",
        "(b-d)/(a+c)",
        "(b-d)/(a-c)",
        "(b*d)-(a*c)",
        "(b*d)-(a/c)",
        "(b/d)-(a*c)",
        "(b/d)-(a/c)",
        "(b+d)*(c-a)",
        "(b+d)/(c-a)",
        "(b-d)/(c-a)",
        "(b*d)+(c/a)",
        "(b*d)-(c/a)",
        "(b/d)+(c/a)",
        "(b/d)-(c/a)",
        "(c-a)/(b+d)",
        "(c/a)-(b*d)",
        "(c/a)-(b/d)",
        "(c/a)+(d/b)",
        "(c/a)-(d/b)",
        "(c-b)/(a+d)",
        "(c/b)-(a*d)",
        "(c/b)-(a/d)",
        "(c/b)+(d/a)",
        "(c/b)-(d/a)",
        "(c+d)/(a+b)",
        "(c+d)/(a-b)",
        "(c-d)/(a+b)",
        "(c-d)/(a-b)",
        "(c*d)-(a*b)",
        "(c*d)-(a/b)",
        "(c/d)-(a*b)",
        "(c/d)-(a/b)",
        "(c+d)/(b-a)",
        "(c-d)/(b-a)",
        "(c*d)-(b/a)",
        "(c/d)-(b/a)",
        "(d-a)/(b+c)",
        "(d/a)-(b*c)",
        "(d/a)-(b/c)",
        "(d/a)-(c/b)",
        "(d-b)/(a+c)",
        "(d/b)-(a*c)",
        "(d/b)-(a/c)",
        "(d/b)-(c/a)",
        "(d-c)/(a+b)",
        "(d/c)-(a*b)",
        "(d/c)-(a/b)",
        "(d/c)-(b/a)",
        "a-((b+c)*d)",
        "a-((b+c)/d)",
        "a-((b*c)*d)",
        "a-((b*c)/d)",
        "a-((b/c)*d)",
        "a-(b/(c*d))",
        "a/((b+c)+d)",
        "a/((b+c)-d)",
        "a/((b-c)+d)",
        "a/((b-c)-d)",
        "a/((b*c)+d)",
        "a/((b*c)-d)",
        "a/((b/c)+d)",
        "a/((b/c)-d)",
        "a-((b+d)*c)",
        "a-((b+d)/c)",
        "a/((b*d)+c)",
        "a/((b*d)-c)",
        "a/((b/d)+c)",
        "a/((b/d)-c)",
        "a-((c/b)*d)",
        "a-(c/(b*d))",
        "a/((c-b)+d)",
        "a/((c-b)-d)",
        "a/((c/b)+d)",
        "a/((c/b)-d)",
        "a-((c+d)*b)",
        "a-((c+d)/b)",
        "a/((c*d)+b)",
        "a/((c*d)-b)",
        "a/((c/d)+b)",
        "a/((c/d)-b)",
        "a-(d/(b*c))",
        "a/((d-b)-c)",
        "a/((d/b)+c)",
        "a/((d/b)-c)",
        "a/((d/c)+b)",
        "a/((d/c)-b)",
        "b-((a+c)*d)",
        "b-((a+c)/d)",
        "b-((a*c)*d)",
        "b-((a*c)/d)",
        "b-((a/c)*d)",
        "b-(a/(c*d))",
        "b/((a+c)+d)",
        "b/((a+c)-d)",
        "b/((a-c)+d)",
        "b/((a-c)-d)",
        "b/((a*c)+d)",
        "b/((a*c)-d)",
        "b/((a/c)+d)",
        "b/((a/c)-d)",
        "b-((a+d)*c)",
        "b-((a+d)/c)",
        "b/((a*d)+c)",
        "b/((a*d)-c)",
        "b/((a/d)+c)",
        "b/((a/d)-c)",
        "b-((c/a)*d)",
        "b-(c/(a*d))",
        "b/((c-a)+d)",
        "b/((c-a)-d)",
        "b/((c/a)+d)",
        "b/((c/a)-d)",
        "b-((c+d)*a)",
        "b-((c+d)/a)",
        "b/((c*d)+a)",
        "b/((c*d)-a)",
        "b/((c/d)+a)",
        "b/((c/d)-a)",
        "b-(d/(a*c))",
        "b/((d-a)-c)",
        "b/((d/a)+c)",
        "b/((d/a)-c)",
        "b/((d/c)+a)",
        "b/((d/c)-a)",
        "c-((a+b)*d)",
        "c-((a+b)/d)",
        "c-((a*b)*d)",
        "c-((a*b)/d)",
        "c-((a/b)*d)",
        "c-(a/(b*d))",
        "c/((a+b)+d)",
        "c/((a+b)-d)",
        "c/((a-b)+d)",
        "c/((a-b)-d)",
        "c/((a*b)+d)",
        "c/((a*b)-d)",
        "c/((a/b)+d)",
        "c/((a/b)-d)",
        "c-((a+d)*b)",
        "c-((a+d)/b)",
        "c/((a*d)+b)",
        "c/((a*d)-b)",
        "c/((a/d)+b)",
        "c/((a/d)-b)",
        "c-((b/a)*d)",
        "c-(b/(a*d))",
        "c/((b-a)+d)",
        "c/((b-a)-d)",
        "c/((b/a)+d)",
        "c/((b/a)-d)",
        "c-((b+d)*a)",
        "c-((b+d)/a)",
        "c/((b*d)+a)",
        "c/((b*d)-a)",
        "c/((b/d)+a)",
        "c/((b/d)-a)",
        "c-(d/(a*b))",
        "c/((d-a)-b)",
        "c/((d/a)+b)",
        "c/((d/a)-b)",
        "c/((d/b)+a)",
        "c/((d/b)-a)",
        "d-((a+b)*c)",
        "d-((a+b)/c)",
        "d-((a*b)*c)",
        "d-((a*b)/c)",
        "d-((a/b)*c)",
        "d-(a/(b*c))",
        "d/((a+b)+c)",
        "d/((a+b)-c)",
        "d/((a-b)+c)",
        "d/((a-b)-c)",
        "d/((a*b)+c)",
        "d/((a*b)-c)",
        "d/((a/b)+c)",
        "d/((a/b)-c)",
        "d-((a+c)*b)",
        "d-((a+c)/b)",
        "d/((a*c)+b)",
        "d/((a*c)-b)",
        "d/((a/c)+b)",
        "d/((a/c)-b)",
        "d-((b/a)*c)",
        "d-(b/(a*c))",
        "d/((b-a)+c)",
        "d/((b-a)-c)",
        "d/((b/a)+c)",
        "d/((b/a)-c)",
        "d-((b+c)*a)",
        "d-((b+c)/a)",
        "d/((b*c)+a)",
        "d/((b*c)-a)",
        "d/((b/c)+a)",
        "d/((b/c)-a)",
        "d-(c/(a*b))",
        "d/((c-a)-b)",
        "d/((c/a)+b)",
        "d/((c/a)-b)",
        "d/((c/b)+a)",
        "d/((c/b)-a)",
        "a-(b/(c+d))",
        "a/(b-(c*d))",
        "a/(b-(c/d))",
        "a/(b-(d/c))",
        "a-(c/(b+d))",
        "a/(c-(b*d))",
        "a/(c-(b/d))",
        "a/(c-(d/b))",
        "a-(d/(b+c))",
        "a/(d-(b*c))",
        "a/(d-(b/c))",
        "a/(d-(c/b))",
        "b-(a/(c+d))",
        "b/(a-(c*d))",
        "b/(a-(c/d))",
        "b/(a-(d/c))",
        "b-(c/(a+d))",
        "b/(c-(a*d))",
        "b/(c-(a/d))",
        "b/(c-(d/a))",
        "b-(d/(a+c))",
        "b/(d-(a*c))",
        "b/(d-(a/c))",
        "b/(d-(c/a))",
        "c-(a/(b+d))",
        "c/(a-(b*d))",
        "c/(a-(b/d))",
        "c/(a-(d/b))",
        "c-(b/(a+d))",
        "c/(b-(a*d))",
        "c/(b-(a/d))",
        "c/(b-(d/a))",
        "c-(d/(a+b))",
        "c/(d-(a*b))",
        "c/(d-(a/b))",
        "c/(d-(b/a))",
        "d-(a/(b+c))",
        "d/(a-(b*c))",
        "d/(a-(b/c))",
        "d/(a-(c/b))",
        "d-(b/(a+c))",
        "d/(b-(a*c))",
        "d/(b-(a/c))",
        "d/(b-(c/a))",
        "d-(c/(a+b))",
        "d/(c-(a*b))",
        "d/(c-(a/b))",
        "d/(c-(b/a))"
    ];
      
    if (number.length == 4) {
        var solutions =  await datamethod(method_a, n3, n2, n1, n0)
        if(solutions.length > 0){
            total = 24
            text = "Yes"
        }
    }
    const result = {
        total: total,
        resulttext: text,
        solutions: solutions

    }
    res.send(result)
});

const datamethod = async (exp, na, nb, nc, nd) => {

    var solutions = [];
    for (var i = 0; i < exp.length; i++) {
        // console.log(exp);
        var value = exp[i];
        value = value.split("a").join(na);
        value = value.split("b").join(nb);
        value = value.split("c").join(nc);
        value = value.split("d").join(nd);
        if ((eval(value) == 24)) {
            solutions.push(value);
        }
    }
    return solutions
}

module.exports = router;